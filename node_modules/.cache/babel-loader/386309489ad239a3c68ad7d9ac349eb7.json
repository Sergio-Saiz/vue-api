{"remainingRequest":"/home/sergio/code/login-vuejs/node_modules/babel-loader/lib/index.js!/home/sergio/code/login-vuejs/src/store/index.js","dependencies":[{"path":"/home/sergio/code/login-vuejs/src/store/index.js","mtime":1662869570697},{"path":"/home/sergio/code/login-vuejs/node_modules/cache-loader/dist/cjs.js","mtime":1662705389539},{"path":"/home/sergio/code/login-vuejs/node_modules/babel-loader/lib/index.js","mtime":1662705389914}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/sergio/code/login-vuejs/src/store/index.js"],"names":["Vue","Vuex","router","use","Store","state","token","username","userId","mutations","setToken","payload","setUserId","setUsername","logout","localStorage","removeItem","location","href","actions","login","user","commit","fetch","method","headers","body","JSON","stringify","res","json","userDB","setItem","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","window","atob","map","c","charCodeAt","toString","slice","join","tokenPayload","parse","id","push","console","log","register","getToken","getItem","getUserId","getUsername","requestResetPassword","email","resendActivationEmail","activateAccount","resetPassword","modules"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport router from '../router'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    token: null,\n    username: null,\n    userId: null,\n  },\n  mutations: {\n    setToken(state, payload) {\n      state.token = payload\n    },\n    setUserId(state, payload) {\n      state.userId = payload\n    },\n    setUsername(state, payload) {\n      state.username = payload\n    },\n    logout() {\n      localStorage.removeItem('token')\n      localStorage.removeItem('userId')\n      localStorage.removeItem('username')\n      location.href='/'\n    },\n  },\n  actions: {\n    async login({ commit }, user) {\n      try {\n        const res = await fetch('http://localhost:250/api/v1/users/login_check', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(user)\n        })\n        const userDB = await res.json()\n        commit('setToken', userDB.token)\n        localStorage.setItem('token', userDB.token)\n\n        var base64Url = userDB.token.split('.')[1];\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        var jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function(c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n    \n        const tokenPayload = JSON.parse(jsonPayload)\n        // commit('setUser', {id: tokenPayload.id, username: tokenPayload.username})\n        // localStorage.setItem('user', {id: tokenPayload.id, username: tokenPayload.username})\n        commit('setUsername', tokenPayload.username)\n        localStorage.setItem('username', tokenPayload.username)\n        commit('setUserId', tokenPayload.id)\n        localStorage.setItem('userId', tokenPayload.id)\n\n        router.push('User');\n         \n      } catch (error) {\n        console.log('Error: ', error)\n      }\n      \n    },\n    async register({ commit },  user ) {\n      try {\n        const res = await fetch('http://localhost:250/api/v1/users/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },  \n          body: JSON.stringify(user)\n        })\n        const userDB = await res.json()\n        router.push('Login');\n      } catch (error) {\n        console.log('Error: ', error)\n      }\n    },\n    getToken({commit}) {\n      if(localStorage.getItem('token')) {\n        commit('setToken', localStorage.getItem('token'))\n      } else {\n        commit('setToken', null)\n      }\n    },\n    getUserId({commit}) {\n      if(localStorage.getItem('userId')) {\n        commit('setUserId', localStorage.getItem('userId'))\n      } else {\n        commit('setUserId', null)\n      }\n    },\n    getUsername({commit}) {\n      if(localStorage.getItem('username')) {\n        commit('setUsername', localStorage.getItem('username'))\n      } else {\n        commit('setUsername', null)\n      }\n    },\n    logout ({ commit }) {\n      commit('logout')\n    },\n\n\n    async requestResetPassword({commit}, email ) {\n      try {\n        const res = await fetch('http://localhost:250/api/v1/users/request_reset_password', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },  \n          body: JSON.stringify(email)\n        })\n        const userDB = await res.json()\n        console.log(userDB)\n        router.push('Home');\n      } catch (error) {\n        console.log('Error: ', error)\n      }\n    },\n\n    async resendActivationEmail({commit}, email ) {\n      try {\n        const res = await fetch('http://localhost:250/api/v1/users/resend_activation_email', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },  \n          body: JSON.stringify(email)\n        })\n        const userDB = await res.json()\n        console.log(userDB)\n        router.push('Home');\n      } catch (error) {\n        console.log('Error: ', error)\n      }\n    },\n\n    async activateAccount({ commit }, user ) {\n      try {\n        const res = await fetch('http://localhost:250/api/v1/users/' + user.id + '/activate', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n           // 'Authorization': 'Bearer ' + this.state.token \n          },  \n          body: JSON.stringify({token: user.token})\n        })\n        const userDB = await res.json()\n        console.log(userDB)\n        router.push('User');\n      } catch (error) {\n        console.log('Error: ', error)\n      }\n      \n    },\n\n    async resetPassword({ commit }, user ) {\n      try {\n        const res = await fetch('http://localhost:250/api/v1/users/' + user.id + '/reset_password', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          //  'Authorization': 'Bearer ' + this.state.token \n          },  \n          body: JSON.stringify(user)\n        })\n        const userDB = await res.json()\n        console.log(userDB)\n        router.push('User');\n      } catch (error) {\n        console.log('Error: ', error)\n      }\n\n    },\n  \n  },\n  modules: {\n  }\n})\n"]}]}