{"ast":null,"code":"import _objectSpread from \"/home/sergio/code/vue-api/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { mapState, mapActions } from 'vuex';\nimport axios from 'axios';\nimport VueRouter from 'vue-router';\nexport default {\n  mounted: function mounted() {\n    var _this = this;\n\n    axios.get('http://localhost:250/api/v1/users/' + this.userId, {\n      headers: {\n        'Authorization': \"Bearer \".concat(this.token)\n      }\n    }).then(function (res) {\n      _this.user = res.data;\n    })[\"catch\"](function (error) {\n      console.error(error);\n    });\n  },\n  created: function created() {//  this.dashboard(this.token)\n  },\n  computed: _objectSpread({}, mapState(['token', 'username', 'userId'])),\n  data: function data() {\n    return {\n      user: {},\n      userCategories: {},\n      oldPassword: null,\n      newPassword: null\n    };\n  },\n  methods: {\n    // ...mapActions(['dashboard'])\n    updateUser: function updateUser(user) {\n      var _this2 = this;\n\n      axios({\n        method: 'put',\n        url: 'http://localhost:250/api/v1/users/' + this.userId,\n        headers: {\n          'Authorization': \"Bearer \".concat(this.token)\n        },\n        data: {\n          name: this.user.name\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        _this2.user = res.data;\n      })[\"catch\"](function (error) {\n        console.error(error);\n      });\n    },\n    updatePassword: function updatePassword(oldPassword, newPassword) {\n      var _this3 = this;\n\n      axios({\n        method: 'put',\n        url: 'http://localhost:250/api/v1/users/' + this.userId + '/change_password',\n        headers: {\n          'Authorization': \"Bearer \".concat(this.token)\n        },\n        data: {\n          oldPassword: this.oldPassword,\n          newPassword: this.newPassword\n        }\n      }).then(function (res) {\n        console.log(res.data);\n        _this3.oldPassword = null;\n        _this3.newPassword = null;\n      })[\"catch\"](function (error) {\n        console.error(error);\n      });\n    },\n    deleteUser: function deleteUser() {\n      var _this4 = this;\n\n      axios({\n        method: 'delete',\n        url: 'http://localhost:250/api/v1/users/' + this.userId,\n        headers: {\n          'Authorization': \"Bearer \".concat(this.token)\n        }\n      }).then(function (res) {\n        _this4.$store.dispatch('logout');\n      })[\"catch\"](function (error) {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;AA2BA;AACA;AACA;AACA;EACAA,OADA,qBACA;IAAA;;IACAC;MACAC;QACA;MADA;IADA,GAKAC,IALA,CAKA;MACA;IACA,CAPA,WAQA;MACAC;IACA,CAVA;EAYA,CAdA;EAeAC,OAfA,qBAeA,CACA;EACA,CAjBA;EAkBAC,4BACAC,yCADA,CAlBA;EAqBAC,IArBA,kBAqBA;IACA;MACAC,QADA;MAEAC,kBAFA;MAGAC,iBAHA;MAIAC;IAJA;EAMA,CA5BA;EA6BAC;IACA;IACAC,UAFA,sBAEAL,IAFA,EAEA;MAAA;;MACAR;QACAc,aADA;QAEAC,uDAFA;QAGAd;UACA;QADA,CAHA;QAMAM;UACAS;QADA;MANA,GAUAd,IAVA,CAUA;QACAC;QACA;MACA,CAbA,WAcA;QACAA;MACA,CAhBA;IAiBA,CApBA;IAsBAc,cAtBA,0BAsBAP,WAtBA,EAsBAC,WAtBA,EAsBA;MAAA;;MACAX;QACAc,aADA;QAEAC,4EAFA;QAGAd;UACA;QADA,CAHA;QAMAM;UACAG,6BADA;UAEAC;QAFA;MANA,GAWAT,IAXA,CAWA;QACAC;QACA;QACA;MACA,CAfA,WAgBA;QACAA;MACA,CAlBA;IAmBA,CA1CA;IA4CAe,UA5CA,wBA4CA;MAAA;;MACAlB;QACAc,gBADA;QAEAC,uDAFA;QAGAd;UACA;QADA;MAHA,GAOAC,IAPA,CAOA;QACA;MACA,CATA,WAUA;QACAC;MACA,CAZA;IAeA;EA5DA;AA7BA","names":["mounted","axios","headers","then","console","created","computed","mapState","data","user","userCategories","oldPassword","newPassword","methods","updateUser","method","url","name","updatePassword","deleteUser"],"sourceRoot":"src/views","sources":["User.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h1>Usuario</h1>\n      <form @submit.prevent=\"updateUser(user), logout()\">\n          Nombre: <input type=\"text\" placeholder=\"Ingrese Username\" v-model=\"user.name\">\n          <button type=\"submit\">Actualizar</button>\n      </form>\n      <p></p>\n      <p>Correo: {{user.email}}</p>\n      \n      \n      <form @submit.prevent=\"updatePassword(user)\">\n          oldPassword: <input style=\"border: 0\" type=\"text\" placeholder=\"oldPassword\" v-model=\"oldPassword\">\n          newPassword: <input style=\"border: 0\" type=\"text\" placeholder=\"newPassword\" v-model=\"newPassword\">\n          <button type=\"submit\">Cambiar contraseña</button>\n      </form>\n      <p></p>\n      <form @submit.prevent=\"deleteUser()\">\n          ¿Quieres eliminar al usuario? <button type=\"submit\">Eliminar usuario</button>\n      </form>\n      <p></p>\n      <h3>Notificaciones</h3>\n    </div>\n  </div>\n</template>\n<script>\nimport {mapState, mapActions} from 'vuex'\nimport axios from 'axios';\nimport VueRouter from 'vue-router'\nexport default {\n  mounted () {\n    axios.get('http://localhost:250/api/v1/users/' + this.userId, {\n      headers: {\n        'Authorization': `Bearer ${this.token}`\n      }\n    })\n    .then((res) => {\n      this.user = res.data\n    })\n    .catch((error) => {\n      console.error(error)\n    })\n\n  },\n  created(){\n  //  this.dashboard(this.token)\n  },\n  computed: {\n    ...mapState(['token', 'username', 'userId'])\n  },\n  data() {\n    return {\n        user: {},\n        userCategories: {},\n        oldPassword: null,\n        newPassword: null,\n    }\n  },\n  methods: {\n   // ...mapActions(['dashboard'])\n    updateUser(user) {\n      axios({\n        method: 'put',\n        url: 'http://localhost:250/api/v1/users/' + this.userId,\n        headers: {\n                'Authorization': `Bearer ${this.token}`\n                },\n        data: {\n          name: this.user.name,\n        }\n      })\n      .then((res) => {\n        console.log(res.data)\n        this.user = res.data\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n    },\n\n    updatePassword(oldPassword, newPassword) {\n      axios({\n        method: 'put',\n        url: 'http://localhost:250/api/v1/users/' + this.userId + '/change_password',\n        headers: {\n                'Authorization': `Bearer ${this.token}`\n                },\n        data: {\n          oldPassword: this.oldPassword,\n          newPassword: this.newPassword,\n        }\n      })\n      .then((res) => {\n        console.log(res.data)\n        this.oldPassword = null\n        this.newPassword = null\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n    },\n\n    deleteUser() {\n      axios({\n        method: 'delete',\n        url: 'http://localhost:250/api/v1/users/' + this.userId,\n        headers: {\n                'Authorization': `Bearer ${this.token}`\n                }\n      })\n      .then((res) => {\n        this.$store.dispatch('logout')\n      })\n      .catch((error) => {\n        console.error(error)\n      })\n      \n\n    },\n\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module"}